{"version":3,"sources":["../../../../assets/scripts/assets/scripts/dataCenter.js"],"names":["dataCenter","playerData","currentDollor","currentAreaLevel","currentEquips","gotEquips","currentRes","prefabs","configs","refreshConfig","fishConfig","setUpPlayerDataFromServer","localPlayerData","JSON","parse","cc","sys","localStorage","getItem","changePlayerData","key","value","storePlayerData","setItem","stringify","getRefreshRuleByAreaLevel","givenLevel","index","areaId","rules","getFishDetailConfigByFishId","givenId","fishModelName","fishDollor","fishId","getFishPrefabNamesByAreaLevel","givenAreaLevel","refreshRules","fishIds","fishDetailConfigs","prefabNames","oneDetailConfig","getJsonObjFromServerByJsonFileName","givenName","loader","loadRes","err","obj","log","json","module","exports"],"mappings":"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","file":"dataCenter.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nvar dataCenter = {\n    playerData: {\n        currentDollor: 0,\n        currentAreaLevel: 1,\n        currentEquips: [],\n        gotEquips:[]\n    \n    },\n    currentRes: {\n        prefabs: [],\n    },\n    configs: {\n        refreshConfig: null,\n        fishConfig:null\n    },\n\n    setUpPlayerDataFromServer(){\n        //it should to get datas from server, now we will just read local data\n        var localPlayerData = JSON.parse(cc.sys.localStorage.getItem(\"playerData\"));\n        if (localPlayerData != null) {\n            this.playerData = localPlayerData;\n        }\n        return true;\n    },\n    \n    changePlayerData(key,value){\n        this.playerData.key = value;\n    },\n    storePlayerData(){\n        //it will not be used when server start to deal with data\n        cc.sys.localStorage.setItem(\"playerData\",JSON.stringify(this.playerData));\n    },\n    getRefreshRuleByAreaLevel(givenLevel,refreshConfig){\n        if (refreshConfig == null) {\n            refreshConfig = this.configs.refreshConfig;\n        }\n        for (var index in refreshConfig) {\n            if (refreshConfig[index].areaId == givenLevel) {\n                return refreshConfig[index].rules;\n            }\n        }     \n    },\n    getFishDetailConfigByFishId(givenId,fishConfig) {\n        if(fishConfig == null) {\n            fishConfig = this.configs.fishConfig;\n        }\n        var fishModelName = null\n        var fishDollor = null\n        for(var index in fishConfig) {\n            if (fishConfig[index].fishId == givenId) {\n                fishModelName = fishConfig[index].fishModelName;\n                fishDollor = fishConfig[index].fishDollor;\n                break;\n            }\n        }\n        if (fishModelName != null && fishDollor != null) {\n            return [fishModelName, fishDollor];\n        }\n        \n    },\n    getFishPrefabNamesByAreaLevel(givenAreaLevel) {\n        if (givenAreaLevel == null) {\n            givenAreaLevel = this.dataCenter.currentAreaLevel;\n        }\n        var refreshRules = this.getRefreshRuleByAreaLevel(givenAreaLevel);\n        var fishIds = [];\n        for (var index in refreshRules) {\n            fishIds[index] = refreshRules[index].fishId;\n        }\n        var fishDetailConfigs = [];\n        for (var index in fishIds) {\n            fishDetailConfigs[index] = this.getFishDetailConfigByFishId(fishIds[index]);\n        }\n\n        var prefabNames = [];\n        for (var index in fishDetailConfigs) {\n            var oneDetailConfig = fishDetailConfigs[index];\n            prefabNames[index] = oneDetailConfig[0];\n        }\n        return prefabNames;\n    },\n    getJsonObjFromServerByJsonFileName(givenName) {\n        cc.loader.loadRes(givenName,function(err,obj){\n            if (err){\n                cc.log(err)\n            }\n            else {\n                return obj.json;\n            }\n        })\n    }\n\n}\n\nmodule.exports = dataCenter;\n"]}